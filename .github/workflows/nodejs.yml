# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ci

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container: node:current
    timeout-minutes: 60
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      matrix:
        node: ['lts/*']
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Cache
        uses: actions/cache@v4
        id: cache-lerna
        env:
          cache-name: cache-lerna
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/.tsbuildinfo
            packages/*/dist
          key: ${{ runner.OS }}-build-${{ env.cache-name }}-${{ github.ref }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-${{ github.ref }}-${{ matrix.node }}-

      - name: Prepare
        run: |
          pwd
          uname -a
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq --yes > /dev/null
          # apt-get upgrade -qq --yes > /dev/null
          apt-get install -qq --yes --no-install-recommends bash dnsutils git jq locales net-tools wget > /dev/null
          apt-get install -qq --yes postgresql-client libpq-dev > /dev/null
          uname -a
          npm -v && node -v
          git --version
          openssl version
          cat /etc/*release
          sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen
          locale-gen
          locale -a
          netstat -tunpl
          export cwd=`pwd`
          git config --global --add safe.directory $cwd

      - name: Install Dependencies
        timeout-minutes: 15
        run: |
          # DO NOT execute: npm config set unsafe-perm=true
          export cwd=`pwd`
          npm i --no-audit -g autocannon c8 lerna rollup tsx zx
          npm i
        env:
          CI: true

      - name: Build
        run: |
          pwd
          whoami
          export cwd=`pwd`
          . .scripts/ci/ci-env.sh
          .scripts/ci/ci-prepare.sh
          npm run build --if-present
        env:
          CI: true

      - name: Lint
        run: |
          export cwd=`pwd`
          . .scripts/ci/ci-env.sh
          .scripts/ci/ci-prepare.sh
          npm run lint:s
          npm run lint:cycle
        env:
          CI: true


    # services:
    #   postgres:
    #     image: postgres:alpine
    #     ports:
    #       - 5432:5432
    #     env:
    #       POSTGRES_DB: db_ci_test
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #     # needed because the postgres container does not provide a healthcheck
    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

